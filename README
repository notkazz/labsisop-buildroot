Buildroot is a simple, efficient and easy-to-use tool to generate embedded
Linux systems through cross-compilation.

The documentation can be found in docs/manual. You can generate a text
document with 'make manual-text' and read output/docs/manual/manual.text.
Online documentation can be found at http://buildroot.org/docs.html

To build and use the buildroot stuff, do the following:

1) run 'make menuconfig'
2) select the target architecture and the packages you wish to compile
3) run 'make'
4) wait while it compiles
5) find the kernel, bootloader, root filesystem, etc. in output/images

You do not need to be root to build or run buildroot.  Have fun!

Buildroot comes with a basic configuration for a number of boards. Run
'make list-defconfigs' to view the list of provided configurations.

Please feed suggestions, bug reports, insults, and bribes back to the
buildroot mailing list: buildroot@buildroot.org
You can also find us on #buildroot on OFTC IRC.

If you would like to contribute patches, please read
https://buildroot.org/manual.html#submitting-patches

device write-> networkdevice support -> Ethernet  driver support -> PRO/1000 *
colormake -j16 #run afeter changes on menu-config



#Enter qemu
qemu-system-i386 --kernel output/images/bzImage --hda output/images/rootfs.ext2 --nographic --append "console=ttyS0 root=/dev/sda" 

#qemu-ifup run
sudo qemu-system-i386 --device e1000,netdev=eth0,mac=aa:bb:cc:dd:ee:ff \
	--netdev tap,id=eth0,script=custom-scripts/qemu-ifup \
	--kernel output/images/bzImage \
	--hda output/images/rootfs.ext2 \
	--nographic \
	--append "console=ttyS0 root=/dev/sda"

links http://192.168.1.10:8080/
#host: 172.16.5.4
#client: 192.168.1.10

#copy \/
#target start
#Configure um IP para a interface de rede do guest:
ifconfig eth0 192.168.1.10 up &&

#Agora, adicione uma rota padr√£o para o IP do host.
route add -host 172.16.5.4 dev eth0 &&
route add default gw 172.16.5.4 &&

iperf -s
#target fi

#run on host
#on src/app
./iperf-2.1.8/src/iperf -c 192.168.1.10 -i 1 -t 5 

#with jitter
iperf -s -u
./iperf-2.1.8/src/iperf -c 192.168.1.10 -i 1 -t 5 -u

#/workspaces/labsisop-buildroot/output/host/usr/bin/
export PATH=$PATH:/workspaces/labsisop-buildroot/output/host/usr/bin/
/workspaces/labsisop-buildroot/output/host/usr/bin/
ln -s /workspaces/labsisop-buildroot/output/host/usr/bin/i686-linux-gcc output/target/usr/bin/i686-linux-gcc

#i686-linux-gcc hello.c -O2 -o hello

links http://192.168.1.10:8080/